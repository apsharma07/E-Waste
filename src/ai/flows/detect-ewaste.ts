// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A e-waste detection AI agent.
 *
 * - detectEwaste - A function that handles the e-waste detection process.
 * - DetectEwasteInput - The input type for the detectEwaste function.
 * - DetectEwasteOutput - The return type for the detectEwaste function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DetectEwasteInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of e-waste, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type DetectEwasteInput = z.infer<typeof DetectEwasteInputSchema>;

const DetectEwasteOutputSchema = z.object({
  ewasteType: z.string().describe('The type of e-waste in the photo.'),
  disposalInstructions: z
    .string()
    .describe('Instructions for proper disposal of the e-waste.'),
});
export type DetectEwasteOutput = z.infer<typeof DetectEwasteOutputSchema>;

export async function detectEwaste(input: DetectEwasteInput): Promise<DetectEwasteOutput> {
  return detectEwasteFlow(input);
}

const prompt = ai.definePrompt({
  name: 'detectEwastePrompt',
  input: {schema: DetectEwasteInputSchema},
  output: {schema: DetectEwasteOutputSchema},
  prompt: `You are an expert in identifying e-waste and providing disposal instructions.

You will use this information to identify the type of e-waste in the photo and provide instructions for proper disposal.

Analyze the following image of e-waste:

Photo: {{media url=photoDataUri}}`,
});

const detectEwasteFlow = ai.defineFlow(
  {
    name: 'detectEwasteFlow',
    inputSchema: DetectEwasteInputSchema,
    outputSchema: DetectEwasteOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
